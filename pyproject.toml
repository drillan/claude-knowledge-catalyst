[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "claude-knowledge-catalyst"
dynamic = ["version"]
description = "Knowledge management catalyst for Claude Code development"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["claude", "knowledge", "management", "obsidian", "ai", "development"]
authors = [
    {name = "CKC Contributors"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "watchdog>=3.0.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "gitpython>=3.1.0",
    "jinja2>=3.1.0",
    "python-frontmatter>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]

[project.urls]
Homepage = "https://github.com/driller/claude-knowledge-catalyst"
Documentation = "https://github.com/driller/claude-knowledge-catalyst#readme"
Repository = "https://github.com/driller/claude-knowledge-catalyst.git"
Issues = "https://github.com/driller/claude-knowledge-catalyst/issues"

[project.scripts]
ckc = "claude_knowledge_catalyst.cli.main:main"

[tool.hatch.version]
path = "src/claude_knowledge_catalyst/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/examples",
]

[tool.hatch.build.targets.wheel]
packages = ["src/claude_knowledge_catalyst"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=claude_knowledge_catalyst",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]